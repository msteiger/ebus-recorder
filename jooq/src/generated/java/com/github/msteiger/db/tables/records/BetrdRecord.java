/*
 * This file is generated by jOOQ.
*/
package com.github.msteiger.db.tables.records;


import com.github.msteiger.db.tables.Betrd;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * status, zustand, stellgrad, kesseltemp, ruecklauftemp, boilertemp, aussentemp
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BetrdRecord extends UpdatableRecordImpl<BetrdRecord> implements Record9<UInteger, Timestamp, Short, Short, Short, Double, Double, Double, Double> {

    private static final long serialVersionUID = 1874844034;

    /**
     * Setter for <code>ebus_recorder.betrd.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.status</code>.
     */
    public void setStatus(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.status</code>.
     */
    public Short getStatus() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.zustand</code>.
     */
    public void setZustand(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.zustand</code>.
     */
    public Short getZustand() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.stellgrad</code>.
     */
    public void setStellgrad(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.stellgrad</code>.
     */
    public Short getStellgrad() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.kesseltemp</code>.
     */
    public void setKesseltemp(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.kesseltemp</code>.
     */
    public Double getKesseltemp() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.ruecklauftemp</code>.
     */
    public void setRuecklauftemp(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.ruecklauftemp</code>.
     */
    public Double getRuecklauftemp() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.aussentemp</code>.
     */
    public void setAussentemp(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.aussentemp</code>.
     */
    public Double getAussentemp() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>ebus_recorder.betrd.boilertemp</code>.
     */
    public void setBoilertemp(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>ebus_recorder.betrd.boilertemp</code>.
     */
    public Double getBoilertemp() {
        return (Double) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<UInteger, Timestamp, Short, Short, Short, Double, Double, Double, Double> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<UInteger, Timestamp, Short, Short, Short, Double, Double, Double, Double> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Betrd.BETRD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Betrd.BETRD.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Betrd.BETRD.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return Betrd.BETRD.ZUSTAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Betrd.BETRD.STELLGRAD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return Betrd.BETRD.KESSELTEMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return Betrd.BETRD.RUECKLAUFTEMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return Betrd.BETRD.AUSSENTEMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return Betrd.BETRD.BOILERTEMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getZustand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getStellgrad();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getKesseltemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getRuecklauftemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getAussentemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getBoilertemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getZustand();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getStellgrad();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getKesseltemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getRuecklauftemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getAussentemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getBoilertemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value2(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value3(Short value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value4(Short value) {
        setZustand(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value5(Short value) {
        setStellgrad(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value6(Double value) {
        setKesseltemp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value7(Double value) {
        setRuecklauftemp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value8(Double value) {
        setAussentemp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord value9(Double value) {
        setBoilertemp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BetrdRecord values(UInteger value1, Timestamp value2, Short value3, Short value4, Short value5, Double value6, Double value7, Double value8, Double value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BetrdRecord
     */
    public BetrdRecord() {
        super(Betrd.BETRD);
    }

    /**
     * Create a detached, initialised BetrdRecord
     */
    public BetrdRecord(UInteger id, Timestamp timestamp, Short status, Short zustand, Short stellgrad, Double kesseltemp, Double ruecklauftemp, Double aussentemp, Double boilertemp) {
        super(Betrd.BETRD);

        set(0, id);
        set(1, timestamp);
        set(2, status);
        set(3, zustand);
        set(4, stellgrad);
        set(5, kesseltemp);
        set(6, ruecklauftemp);
        set(7, aussentemp);
        set(8, boilertemp);
    }
}
