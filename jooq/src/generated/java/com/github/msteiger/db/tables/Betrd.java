/*
 * This file is generated by jOOQ.
*/
package com.github.msteiger.db.tables;


import com.github.msteiger.db.EbusRecorder;
import com.github.msteiger.db.Indexes;
import com.github.msteiger.db.Keys;
import com.github.msteiger.db.tables.records.BetrdRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * status, zustand, stellgrad, kesseltemp, ruecklauftemp, boilertemp, aussentemp
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Betrd extends TableImpl<BetrdRecord> {

    private static final long serialVersionUID = -1670831893;

    /**
     * The reference instance of <code>ebus_recorder.betrd</code>
     */
    public static final Betrd BETRD = new Betrd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BetrdRecord> getRecordType() {
        return BetrdRecord.class;
    }

    /**
     * The column <code>ebus_recorder.betrd.id</code>.
     */
    public final TableField<BetrdRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>ebus_recorder.betrd.timestamp</code>.
     */
    public final TableField<BetrdRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>ebus_recorder.betrd.status</code>.
     */
    public final TableField<BetrdRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>ebus_recorder.betrd.zustand</code>.
     */
    public final TableField<BetrdRecord, Short> ZUSTAND = createField("zustand", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>ebus_recorder.betrd.stellgrad</code>.
     */
    public final TableField<BetrdRecord, Short> STELLGRAD = createField("stellgrad", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>ebus_recorder.betrd.kesseltemp</code>.
     */
    public final TableField<BetrdRecord, Double> KESSELTEMP = createField("kesseltemp", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>ebus_recorder.betrd.ruecklauftemp</code>.
     */
    public final TableField<BetrdRecord, Double> RUECKLAUFTEMP = createField("ruecklauftemp", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>ebus_recorder.betrd.aussentemp</code>.
     */
    public final TableField<BetrdRecord, Double> AUSSENTEMP = createField("aussentemp", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>ebus_recorder.betrd.boilertemp</code>.
     */
    public final TableField<BetrdRecord, Double> BOILERTEMP = createField("boilertemp", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * Create a <code>ebus_recorder.betrd</code> table reference
     */
    public Betrd() {
        this(DSL.name("betrd"), null);
    }

    /**
     * Create an aliased <code>ebus_recorder.betrd</code> table reference
     */
    public Betrd(String alias) {
        this(DSL.name(alias), BETRD);
    }

    /**
     * Create an aliased <code>ebus_recorder.betrd</code> table reference
     */
    public Betrd(Name alias) {
        this(alias, BETRD);
    }

    private Betrd(Name alias, Table<BetrdRecord> aliased) {
        this(alias, aliased, null);
    }

    private Betrd(Name alias, Table<BetrdRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "status, zustand, stellgrad, kesseltemp, ruecklauftemp, boilertemp, aussentemp");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return EbusRecorder.EBUS_RECORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BETRD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BetrdRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_BETRD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BetrdRecord> getPrimaryKey() {
        return Keys.KEY_BETRD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BetrdRecord>> getKeys() {
        return Arrays.<UniqueKey<BetrdRecord>>asList(Keys.KEY_BETRD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Betrd as(String alias) {
        return new Betrd(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Betrd as(Name alias) {
        return new Betrd(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Betrd rename(String name) {
        return new Betrd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Betrd rename(Name name) {
        return new Betrd(name, null);
    }
}
